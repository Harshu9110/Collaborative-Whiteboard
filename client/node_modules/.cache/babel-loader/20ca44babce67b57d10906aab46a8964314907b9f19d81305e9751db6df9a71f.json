{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Harsh Srivastava\\\\OneDrive\\\\Desktop\\\\Mern Stack\\\\Whiteboard\\\\Whiteboard\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport RoomJoin from \"./components/RoomJoin\";\nimport Whiteboard from \"./components/Whiteboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:5000\");\n    newSocket.on(\"connect\", () => {\n      setIsConnected(true);\n      console.log(\"Connected to server\");\n    });\n    newSocket.on(\"disconnect\", () => {\n      setIsConnected(false);\n      console.log(\"Disconnected from server\");\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const joinRoom = async roomId => {\n    try {\n      const response = await fetch(\"/api/rooms/join\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          roomId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setCurrentRoom(roomId);\n        socket.emit(\"join-room\", roomId);\n      } else {\n        alert(data.error || \"Failed to join room\");\n      }\n    } catch (error) {\n      alert(\"Failed to connect to room\");\n    }\n  };\n  const leaveRoom = () => {\n    if (socket && currentRoom) {\n      socket.emit(\"leave-room\");\n    }\n    setCurrentRoom(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: !currentRoom ? /*#__PURE__*/_jsxDEV(RoomJoin, {\n      onJoinRoom: joinRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Whiteboard, {\n      socket: socket,\n      roomId: currentRoom,\n      isConnected: isConnected,\n      onLeaveRoom: leaveRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U+JFYWfn0bmyeyUUZXQouQ9WOyU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","io","RoomJoin","Whiteboard","jsxDEV","_jsxDEV","App","socket","setSocket","currentRoom","setCurrentRoom","isConnected","setIsConnected","newSocket","on","console","log","close","joinRoom","roomId","response","fetch","method","headers","body","JSON","stringify","data","json","success","emit","alert","error","leaveRoom","className","children","onJoinRoom","fileName","lineNumber","columnNumber","onLeaveRoom","_c","$RefreshReg$"],"sources":["C:/Users/Harsh Srivastava/OneDrive/Desktop/Mern Stack/Whiteboard/Whiteboard/client/src/App.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport io from \"socket.io-client\"\nimport RoomJoin from \"./components/RoomJoin\"\nimport Whiteboard from \"./components/Whiteboard\"\n\nfunction App() {\n  const [socket, setSocket] = useState(null)\n  const [currentRoom, setCurrentRoom] = useState(null)\n  const [isConnected, setIsConnected] = useState(false)\n\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:5000\")\n\n    newSocket.on(\"connect\", () => {\n      setIsConnected(true)\n      console.log(\"Connected to server\")\n    })\n\n    newSocket.on(\"disconnect\", () => {\n      setIsConnected(false)\n      console.log(\"Disconnected from server\")\n    })\n\n    setSocket(newSocket)\n\n    return () => {\n      newSocket.close()\n    }\n  }, [])\n\n  const joinRoom = async (roomId) => {\n    try {\n      const response = await fetch(\"/api/rooms/join\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ roomId }),\n      })\n\n      const data = await response.json()\n\n      if (data.success) {\n        setCurrentRoom(roomId)\n        socket.emit(\"join-room\", roomId)\n      } else {\n        alert(data.error || \"Failed to join room\")\n      }\n    } catch (error) {\n      alert(\"Failed to connect to room\")\n    }\n  }\n\n  const leaveRoom = () => {\n    if (socket && currentRoom) {\n      socket.emit(\"leave-room\")\n    }\n    setCurrentRoom(null)\n  }\n\n  return (\n    <div className=\"app\">\n      {!currentRoom ? (\n        <RoomJoin onJoinRoom={joinRoom} />\n      ) : (\n        <Whiteboard socket={socket} roomId={currentRoom} isConnected={isConnected} onLeaveRoom={leaveRoom} />\n      )}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}